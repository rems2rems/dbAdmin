// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = function(config, dbServer) {
    var Promise, buildDbSecurityObject, configDb, createUsers, createViews, dataDb, dbName, insert_beehouse, insert_location, insert_stand, usersDb, util;
    insert_location = require('./insert_location');
    insert_stand = require('./insert_stand');
    insert_beehouse = require('./insert_beehouse');
    createViews = require('./create_views');
    createUsers = require('./create_users');
    buildDbSecurityObject = require('./buildDbSecurityObject');
    Promise = require("promise");
    util = require('util');
    dbName = config.database.name;
    usersDb = dbServer.useDb("_users");
    configDb = dbServer.useDb(config.database.name + "_config");
    dataDb = dbServer.useDb(config.database.name + "_data");
    return configDb.create().then(function() {
      console.log("config db created.");
      return dataDb.create();
    }).then(function() {
      var secu;
      console.log("data db created.");
      secu = config.database.securityObject;
      secu = buildDbSecurityObject(secu, config.database.name);
      return Promise.all([configDb.save(secu), dataDb.save(secu)]);
    }).then(function() {
      console.log("security object created, dbs are protected.");
      return createViews(configDb, "config");
    }).then(function() {
      console.log("config db views created.");
      return createUsers(usersDb, dbName);
    }).then(function(users) {
      var location;
      console.log("users created.");
      location = config.database.configObjects.location;
      return insert_location(configDb, location);
    }).then(function() {
      var p1, p2;
      console.log("location created.");
      p1 = configDb.save(config.database.configObjects.beehouse_model);
      p2 = configDb.save(config.database.configObjects.beehouse);
      return Promise.all([p1, p2]);
    }).then(function() {
      var stand;
      console.log("beehouse created.");
      stand = config.database.configObjects.stand;
      return configDb.save(stand);
    }).then(function() {
      console.log("stand created.");
      return createViews(dataDb, "data");
    }).then(function() {
      return console.log("data db views created");
    });
  };

}).call(this);
