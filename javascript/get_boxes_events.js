// Generated by CoffeeScript 1.10.0
(function() {
  var db, dbConfig, measuresUrl, moment;

  dbConfig = require('./config');

  db = require('../../dbDriver/javascript/dbDriver').useDb(dbConfig.databases.local);

  moment = require('moment');

  measuresUrl = '_design/measures/_view/by_date?startkey=\"2014-04-07T05\"';

  console.log("fetching measures...");

  db.get(measuresUrl, function(err, measures) {
    var i, j, k, l, m, m1, m2, measure, measures10, nbMeasures, ref, ref1, ref2, ref3, results;
    measures = measures.rows;
    console.log("measures loaded!");
    console.log(measures.length);
    measures10 = [];
    nbMeasures = 10;
    for (i = k = 0, ref = measures.length - nbMeasures, ref1 = nbMeasures; ref1 > 0 ? k < ref : k > ref; i = k += ref1) {
      measure = 0;
      for (j = l = 0, ref2 = nbMeasures; 0 <= ref2 ? l < ref2 : l > ref2; j = 0 <= ref2 ? ++l : --l) {
        measure += measures[i + j].value.value;
      }
      measure /= nbMeasures;
      measures10.push({
        key: measures[i + nbMeasures].key,
        value: {
          value: measure
        }
      });
    }
    console.log(measures10.length);
    results = [];
    for (i = m = 0, ref3 = measures10.length - 1; 0 <= ref3 ? m < ref3 : m > ref3; i = 0 <= ref3 ? ++m : --m) {
      if (measures10[i + 1].value.value > (measures10[i].value.value + 3) && measures10[i + 1].value.value < (measures10[i].value.value + 7)) {
        m1 = moment(measures10[i].key);
        m2 = moment(measures10[i + 1].key);
        console.log("box added:");
        console.log("before: " + m1.format() + " , value: " + measures10[i].value.value);
        console.log("after:  " + m2.format() + " , value: " + measures10[i + 1].value.value);
        console.log("duration: " + Math.floor(moment.duration(m2.diff(m1)).asMinutes()) + " min\n\n");
      }
      if (measures10[i + 1].value.value < (measures10[i].value.value - 4) && measures10[i + 1].value.value > (measures10[i].value.value - 25)) {
        m1 = moment(measures10[i].key);
        m2 = moment(measures10[i + 1].key);
        console.log("box removed:");
        console.log("before: " + m1.format() + " , value: " + measures10[i].value.value);
        console.log("after:  " + m2.format() + " , value: " + measures10[i + 1].value.value);
        results.push(console.log("duration: " + Math.floor(moment.duration(m2.diff(m1)).asMinutes()) + " min\n\n"));
      } else {
        results.push(void 0);
      }
    }
    return results;
  });

}).call(this);
