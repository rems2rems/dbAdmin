// Generated by CoffeeScript 1.9.2
(function() {
  var Promise, config, configDb, createViews, dataDb, dbDriver, dbServer, expect, promisify_db;

  expect = require('must');

  require('../../../openbeelab-util/javascript/objectUtils').install();

  require('../../../openbeelab-util/javascript/arrayUtils').install();

  config = require('../config');

  promisify_db = require('../../../openbeelab-db-util/javascript/promisify_dbDriver');

  dbDriver = require('../../../openbeelab-db-util/javascript/mockDriver');

  Promise = require('promise');

  dbServer = dbDriver.connectToServer(config);

  configDb = dbServer.useDb(config.database.name + "_config");

  dataDb = dbServer.useDb(config.database.name + "_data");

  createViews = require('../create_views');

  describe("create views for the config db", function() {
    before(function(done) {
      return configDb.create().then(done)["catch"](function(err) {
        console.log(err);
        return done(err);
      });
    });
    after(function(done) {
      dbServer.deleteDb(config.database.name + "_config");
      return done();
    });
    return it("should create all expected views", function(done) {
      return createViews(configDb, "config").then(function() {
        return configDb.save({
          _id: "test_stand",
          type: 'stand',
          name: 'a test stand'
        });
      }).then(function() {
        return configDb.save({
          _id: 'test_location',
          type: 'location',
          name: 'a test location'
        });
      }).then(function() {
        return configDb.get('_design/stands/_view/all');
      }).then(function(data) {
        data.total_rows.must.be(1);
        return done();
      })["catch"](function(err) {
        return done(err);
      });
    });
  });

  describe("create views for the data db", function() {
    before(function(done) {
      return dataDb.create().then(done)["catch"](function(err) {
        console.log(err);
        return done(err);
      });
    });
    after(function(done) {
      dbServer.deleteDb(config.database.name + "_data");
      return done();
    });
    return it("should create all expected views", function(done) {
      return createViews(dataDb, "data").then(function() {
        return dataDb.save({
          _id: "test_measure",
          type: 'measure',
          name: 'a test measure',
          value: 53.6
        });
      }).then(function() {
        return dataDb.get('_design/measures/_view/all');
      }).then(function(data) {
        data.total_rows.must.be(1);
        return done();
      })["catch"](function(err) {
        return done(err);
      });
    });
  });

}).call(this);
